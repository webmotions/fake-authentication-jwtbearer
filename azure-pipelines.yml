pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'

pr:
  autoCancel: true
  branches:
    include:
    - master
  drafts: false

variables:
- name: BuildPlatform
  value: 'Any CPU'
- name: Solution
  value: 'WebMotions.Fake.Authentication.JwtBearer.sln'
- name: BuildConfiguration
  value: 'Release'
- name: dropName
  value: 'drop'

stages:
- stage: buildStage
  displayName: 'Build'
  jobs:
  - job: buildJob
    displayName: 'Build'
    steps:
    - checkout: self
    
    - task: UseDotNet@2 
      displayName: '.NET Core 6.0.x'
      inputs:
        version: '6.0.x'
        packageType: sdk    

    - task: DotNetCoreCLI@2
      name: restoreVulnerabilitiesSolution
      displayName: 'Restore Vulnerabilitity solution'
      inputs:
        command: restore
        projects: $(Solution)
        verbosityRestore: normal

    - task: PowerShell@2
      name: checkVulnerabilities
      displayName: 'Vulnerabilities check'
      inputs:
        pwsh: true
        targetType: inline
        script: |
          $output = dotnet list "$(Solution)" package --vulnerable
          Write-Output $output
          $errors = $output | Select-String '>'
          if ($errors.Count -gt 0)
          {
            foreach ($err in $errors)
            {
              Write-Host "##vso[task.logissue type=error]Reference to vulnerable NuGet package $err"
            }
            exit 1
          }
          else
          {
            Write-Host "No vulnerable NuGet packages"
            exit 0
          }

    - task: DotNetCoreCLI@2
      displayName: Build solution
      inputs:
        projects: $(Solution)
        arguments: --configuration $(BuildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        projects: 'test/**/*.csproj'
        arguments: '--configuration $(buildConfiguration) -l "console;verbosity=detailed"'
        publishTestResults: true
        
    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: publish
        publishWebProjects: false
        projects: src/WebMotions.Fake.Authentication.JwtBearer/WebMotions.Fake.Authentication.JwtBearer.csproj
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        parallel: true
        artifactName: $(dropName)